name: Test Kubernetes Auto-scaling with NGINX

on:
  workflow_dispatch:

jobs:
  deploy-nginx:
    name: Deploy and Test NGINX on GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate kubectl with GKE
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GKE_REGION }}

      - name: Deploy NGINX
        run: |
          kubectl create deployment nginx --image=nginx || echo "Deployment already exists"
          kubectl expose deployment nginx --type=LoadBalancer --port=80

      - name: Wait for External IP
        id: get-ip
        run: |
          for i in {1..20}; do
            EXTERNAL_IP=$(kubectl get svc nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -z "$EXTERNAL_IP" ]; then
              echo "Waiting for external IP..."
              sleep 15
            else
              echo "External IP: $EXTERNAL_IP"
              echo "::set-output name=external_ip::$EXTERNAL_IP"
              break
            fi
          done
          if [ -z "$EXTERNAL_IP" ]; then
            echo "Failed to get External IP" && exit 1
          fi

      - name: Install Load Testing Tool (Hey)
        run: |
          curl -L -o hey https://hey-release.s3.us-east-2.amazonaws.com/hey_linux_amd64
          chmod +x hey
          sudo mv hey /usr/local/bin/

      - name: Simulate Traffic to Test Auto-scaling
        env:
          EXTERNAL_IP: ${{ steps.get-ip.outputs.external_ip }}
        run: |
          echo "Simulating traffic to NGINX at $EXTERNAL_IP"
          hey -z 1m -c 100 http://$EXTERNAL_IP

      - name: Verify Auto-scaling
        run: |
          echo "Monitoring Horizontal Pod Autoscaler (HPA):"
          kubectl get hpa
          echo "Verifying pods scaling based on traffic:"
          kubectl get pods

      - name: Clean Up Resources
        if: always()
        run: |
          kubectl delete service nginx || true
          kubectl delete deployment nginx || true
