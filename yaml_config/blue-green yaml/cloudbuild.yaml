steps:
  # Step 1: Build the Docker image for the nginx application
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/nginx:$COMMIT_SHA', '.']

  # Step 2: Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/nginx:$COMMIT_SHA']

  # Step 3: Deploy to GKE (Blue Deployment)
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/nginx-blue'
      - 'nginx=gcr.io/$PROJECT_ID/nginx:$COMMIT_SHA'
      - '--record'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=$us-central1-c'
      - 'CLOUDSDK_COMPUTE_ZONE=$us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=$main-gke-cluster1'

  # Step 4: Label the blue deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'label'
      - 'deployment/nginx-blue'
      - 'app=nginx'
      - 'version=blue'
      - '--overwrite'

  # Step 5: Expose the deployment as a LoadBalancer service
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'expose'
      - 'deployment/nginx-blue'
      - '--name=nginx-service'
      - '--port=80'
      - '--target-port=80'
      - '--type=LoadBalancer'

  # Step 6: Update service selector to blue initially
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'selector'
      - 'service/nginx-service'
      - 'app=nginx'
      - 'version=blue'

  # Step 7: (Optional) Wait or validate the deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'get'
      - 'pods'
      - '-l'
      - 'app=nginx,version=blue'
      
timeout: '1200s'

